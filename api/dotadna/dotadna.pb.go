// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0-devel
// 	protoc        v3.21.3
// source: dotadna/dotadna.proto

package dotadna

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MatchInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId       int64  `protobuf:"varint,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	StartTime     int64  `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Duration      int64  `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	RadiantTeamId int64  `protobuf:"varint,4,opt,name=radiant_team_id,json=radiantTeamId,proto3" json:"radiant_team_id,omitempty"`
	DireTeamId    int64  `protobuf:"varint,5,opt,name=dire_team_id,json=direTeamId,proto3" json:"dire_team_id,omitempty"`
	Leagueid      int64  `protobuf:"varint,6,opt,name=leagueid,proto3" json:"leagueid,omitempty"`
	SeriesId      int64  `protobuf:"varint,7,opt,name=series_id,json=seriesId,proto3" json:"series_id,omitempty"`
	SeriesType    int64  `protobuf:"varint,8,opt,name=series_type,json=seriesType,proto3" json:"series_type,omitempty"`
	RadiantName   string `protobuf:"bytes,9,opt,name=radiant_name,json=radiantName,proto3" json:"radiant_name,omitempty"`
	DireName      string `protobuf:"bytes,10,opt,name=dire_name,json=direName,proto3" json:"dire_name,omitempty"`
	LeagueName    string `protobuf:"bytes,11,opt,name=league_name,json=leagueName,proto3" json:"league_name,omitempty"`
}

func (x *MatchInfo) Reset() {
	*x = MatchInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dotadna_dotadna_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchInfo) ProtoMessage() {}

func (x *MatchInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dotadna_dotadna_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchInfo.ProtoReflect.Descriptor instead.
func (*MatchInfo) Descriptor() ([]byte, []int) {
	return file_dotadna_dotadna_proto_rawDescGZIP(), []int{0}
}

func (x *MatchInfo) GetMatchId() int64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *MatchInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *MatchInfo) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *MatchInfo) GetRadiantTeamId() int64 {
	if x != nil {
		return x.RadiantTeamId
	}
	return 0
}

func (x *MatchInfo) GetDireTeamId() int64 {
	if x != nil {
		return x.DireTeamId
	}
	return 0
}

func (x *MatchInfo) GetLeagueid() int64 {
	if x != nil {
		return x.Leagueid
	}
	return 0
}

func (x *MatchInfo) GetSeriesId() int64 {
	if x != nil {
		return x.SeriesId
	}
	return 0
}

func (x *MatchInfo) GetSeriesType() int64 {
	if x != nil {
		return x.SeriesType
	}
	return 0
}

func (x *MatchInfo) GetRadiantName() string {
	if x != nil {
		return x.RadiantName
	}
	return ""
}

func (x *MatchInfo) GetDireName() string {
	if x != nil {
		return x.DireName
	}
	return ""
}

func (x *MatchInfo) GetLeagueName() string {
	if x != nil {
		return x.LeagueName
	}
	return ""
}

type MatchListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Leagueid int64 `protobuf:"varint,1,opt,name=leagueid,proto3" json:"leagueid,omitempty"`
}

func (x *MatchListReq) Reset() {
	*x = MatchListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dotadna_dotadna_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchListReq) ProtoMessage() {}

func (x *MatchListReq) ProtoReflect() protoreflect.Message {
	mi := &file_dotadna_dotadna_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchListReq.ProtoReflect.Descriptor instead.
func (*MatchListReq) Descriptor() ([]byte, []int) {
	return file_dotadna_dotadna_proto_rawDescGZIP(), []int{1}
}

func (x *MatchListReq) GetLeagueid() int64 {
	if x != nil {
		return x.Leagueid
	}
	return 0
}

type MatchListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matches []*MatchInfo `protobuf:"bytes,1,rep,name=matches,proto3" json:"matches,omitempty"`
}

func (x *MatchListResp) Reset() {
	*x = MatchListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dotadna_dotadna_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchListResp) ProtoMessage() {}

func (x *MatchListResp) ProtoReflect() protoreflect.Message {
	mi := &file_dotadna_dotadna_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchListResp.ProtoReflect.Descriptor instead.
func (*MatchListResp) Descriptor() ([]byte, []int) {
	return file_dotadna_dotadna_proto_rawDescGZIP(), []int{2}
}

func (x *MatchListResp) GetMatches() []*MatchInfo {
	if x != nil {
		return x.Matches
	}
	return nil
}

type MatchDetialReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matchid int64 `protobuf:"varint,1,opt,name=matchid,proto3" json:"matchid,omitempty"`
}

func (x *MatchDetialReq) Reset() {
	*x = MatchDetialReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dotadna_dotadna_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchDetialReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchDetialReq) ProtoMessage() {}

func (x *MatchDetialReq) ProtoReflect() protoreflect.Message {
	mi := &file_dotadna_dotadna_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchDetialReq.ProtoReflect.Descriptor instead.
func (*MatchDetialReq) Descriptor() ([]byte, []int) {
	return file_dotadna_dotadna_proto_rawDescGZIP(), []int{3}
}

func (x *MatchDetialReq) GetMatchid() int64 {
	if x != nil {
		return x.Matchid
	}
	return 0
}

type PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroId      int64 `protobuf:"varint,1,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
	Kill        int64 `protobuf:"varint,2,opt,name=kill,proto3" json:"kill,omitempty"`
	Death       int64 `protobuf:"varint,3,opt,name=death,proto3" json:"death,omitempty"`
	Assist      int64 `protobuf:"varint,4,opt,name=assist,proto3" json:"assist,omitempty"`
	LastHits    int64 `protobuf:"varint,5,opt,name=last_hits,json=lastHits,proto3" json:"last_hits,omitempty"`
	Denies      int64 `protobuf:"varint,6,opt,name=denies,proto3" json:"denies,omitempty"`
	GoldPerMin  int64 `protobuf:"varint,7,opt,name=gold_per_min,json=goldPerMin,proto3" json:"gold_per_min,omitempty"`
	XpPerMin    int64 `protobuf:"varint,8,opt,name=xp_per_min,json=xpPerMin,proto3" json:"xp_per_min,omitempty"`
	Level       int64 `protobuf:"varint,9,opt,name=level,proto3" json:"level,omitempty"`
	HeroDamage  int64 `protobuf:"varint,10,opt,name=hero_damage,json=heroDamage,proto3" json:"hero_damage,omitempty"`
	TowerDamage int64 `protobuf:"varint,11,opt,name=tower_damage,json=towerDamage,proto3" json:"tower_damage,omitempty"`
	HeroHealing int64 `protobuf:"varint,12,opt,name=hero_healing,json=heroHealing,proto3" json:"hero_healing,omitempty"`
	Networth    int64 `protobuf:"varint,13,opt,name=networth,proto3" json:"networth,omitempty"`
	GoldSpent   int64 `protobuf:"varint,14,opt,name=gold_spent,json=goldSpent,proto3" json:"gold_spent,omitempty"`
}

func (x *PlayerInfo) Reset() {
	*x = PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dotadna_dotadna_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfo) ProtoMessage() {}

func (x *PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dotadna_dotadna_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfo.ProtoReflect.Descriptor instead.
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return file_dotadna_dotadna_proto_rawDescGZIP(), []int{4}
}

func (x *PlayerInfo) GetHeroId() int64 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

func (x *PlayerInfo) GetKill() int64 {
	if x != nil {
		return x.Kill
	}
	return 0
}

func (x *PlayerInfo) GetDeath() int64 {
	if x != nil {
		return x.Death
	}
	return 0
}

func (x *PlayerInfo) GetAssist() int64 {
	if x != nil {
		return x.Assist
	}
	return 0
}

func (x *PlayerInfo) GetLastHits() int64 {
	if x != nil {
		return x.LastHits
	}
	return 0
}

func (x *PlayerInfo) GetDenies() int64 {
	if x != nil {
		return x.Denies
	}
	return 0
}

func (x *PlayerInfo) GetGoldPerMin() int64 {
	if x != nil {
		return x.GoldPerMin
	}
	return 0
}

func (x *PlayerInfo) GetXpPerMin() int64 {
	if x != nil {
		return x.XpPerMin
	}
	return 0
}

func (x *PlayerInfo) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PlayerInfo) GetHeroDamage() int64 {
	if x != nil {
		return x.HeroDamage
	}
	return 0
}

func (x *PlayerInfo) GetTowerDamage() int64 {
	if x != nil {
		return x.TowerDamage
	}
	return 0
}

func (x *PlayerInfo) GetHeroHealing() int64 {
	if x != nil {
		return x.HeroHealing
	}
	return 0
}

func (x *PlayerInfo) GetNetworth() int64 {
	if x != nil {
		return x.Networth
	}
	return 0
}

func (x *PlayerInfo) GetGoldSpent() int64 {
	if x != nil {
		return x.GoldSpent
	}
	return 0
}

type MatchDetialResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matchid        int64         `protobuf:"varint,1,opt,name=matchid,proto3" json:"matchid,omitempty"`
	Winner         int64         `protobuf:"varint,2,opt,name=winner,proto3" json:"winner,omitempty"`
	RadiantHeroes  []int64       `protobuf:"varint,3,rep,packed,name=radiant_heroes,json=radiantHeroes,proto3" json:"radiant_heroes,omitempty"`
	DireHeroes     []int64       `protobuf:"varint,4,rep,packed,name=dire_heroes,json=direHeroes,proto3" json:"dire_heroes,omitempty"`
	RadiantPlayers []*PlayerInfo `protobuf:"bytes,5,rep,name=radiant_players,json=radiantPlayers,proto3" json:"radiant_players,omitempty"`
	DirePlayers    []*PlayerInfo `protobuf:"bytes,6,rep,name=dire_players,json=direPlayers,proto3" json:"dire_players,omitempty"`
}

func (x *MatchDetialResp) Reset() {
	*x = MatchDetialResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dotadna_dotadna_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchDetialResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchDetialResp) ProtoMessage() {}

func (x *MatchDetialResp) ProtoReflect() protoreflect.Message {
	mi := &file_dotadna_dotadna_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchDetialResp.ProtoReflect.Descriptor instead.
func (*MatchDetialResp) Descriptor() ([]byte, []int) {
	return file_dotadna_dotadna_proto_rawDescGZIP(), []int{5}
}

func (x *MatchDetialResp) GetMatchid() int64 {
	if x != nil {
		return x.Matchid
	}
	return 0
}

func (x *MatchDetialResp) GetWinner() int64 {
	if x != nil {
		return x.Winner
	}
	return 0
}

func (x *MatchDetialResp) GetRadiantHeroes() []int64 {
	if x != nil {
		return x.RadiantHeroes
	}
	return nil
}

func (x *MatchDetialResp) GetDireHeroes() []int64 {
	if x != nil {
		return x.DireHeroes
	}
	return nil
}

func (x *MatchDetialResp) GetRadiantPlayers() []*PlayerInfo {
	if x != nil {
		return x.RadiantPlayers
	}
	return nil
}

func (x *MatchDetialResp) GetDirePlayers() []*PlayerInfo {
	if x != nil {
		return x.DirePlayers
	}
	return nil
}

var File_dotadna_dotadna_proto protoreflect.FileDescriptor

var file_dotadna_dotadna_proto_rawDesc = []byte{
	0x0a, 0x15, 0x64, 0x6f, 0x74, 0x61, 0x64, 0x6e, 0x61, 0x2f, 0x64, 0x6f, 0x74, 0x61, 0x64, 0x6e,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x64, 0x6e, 0x61, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xe6, 0x02, 0x0a, 0x09, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e,
	0x74, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x61,
	0x64, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x69, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2a, 0x0a, 0x0c, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x0d, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x64, 0x6e, 0x61, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x22, 0x2a, 0x0a, 0x0e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x22, 0x94, 0x03, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6b, 0x69,
	0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x64, 0x65, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x68, 0x69, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x69, 0x74, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x65, 0x6e, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64,
	0x65, 0x6e, 0x69, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x67, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x65,
	0x72, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x6f, 0x6c,
	0x64, 0x50, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x0a, 0x78, 0x70, 0x5f, 0x70, 0x65,
	0x72, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x78, 0x70, 0x50,
	0x65, 0x72, 0x4d, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x68,
	0x65, 0x72, 0x6f, 0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x68, 0x65, 0x72, 0x6f, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x68, 0x65, 0x72, 0x6f, 0x48, 0x65, 0x61, 0x6c, 0x69,
	0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x74, 0x68, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x74, 0x68, 0x12, 0x1d,
	0x0a, 0x0a, 0x67, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x67, 0x6f, 0x6c, 0x64, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x22, 0x89, 0x02,
	0x0a, 0x0f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x68,
	0x65, 0x72, 0x6f, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x61, 0x64,
	0x69, 0x61, 0x6e, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69,
	0x72, 0x65, 0x5f, 0x68, 0x65, 0x72, 0x6f, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x0a, 0x64, 0x69, 0x72, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x72,
	0x61, 0x64, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x64,
	0x6e, 0x61, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x72,
	0x61, 0x64, 0x69, 0x61, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a,
	0x0c, 0x64, 0x69, 0x72, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x64, 0x6e,
	0x61, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x64, 0x69,
	0x72, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x32, 0xcf, 0x01, 0x0a, 0x07, 0x44, 0x6f,
	0x74, 0x61, 0x64, 0x6e, 0x61, 0x12, 0x5d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x6f, 0x74, 0x61,
	0x64, 0x6e, 0x61, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x64, 0x6e, 0x61, 0x2e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x16, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2f,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x65, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x65, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x64, 0x6e, 0x61, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x64, 0x6e,
	0x61, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x2f, 0x64, 0x65, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x2c, 0x0a, 0x0b, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x64, 0x6e, 0x61, 0x50, 0x01, 0x5a, 0x1b, 0x64, 0x6f,
	0x74, 0x61, 0x64, 0x6e, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x6f, 0x74, 0x61, 0x64, 0x6e,
	0x61, 0x3b, 0x64, 0x6f, 0x74, 0x61, 0x64, 0x6e, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_dotadna_dotadna_proto_rawDescOnce sync.Once
	file_dotadna_dotadna_proto_rawDescData = file_dotadna_dotadna_proto_rawDesc
)

func file_dotadna_dotadna_proto_rawDescGZIP() []byte {
	file_dotadna_dotadna_proto_rawDescOnce.Do(func() {
		file_dotadna_dotadna_proto_rawDescData = protoimpl.X.CompressGZIP(file_dotadna_dotadna_proto_rawDescData)
	})
	return file_dotadna_dotadna_proto_rawDescData
}

var file_dotadna_dotadna_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_dotadna_dotadna_proto_goTypes = []interface{}{
	(*MatchInfo)(nil),       // 0: api.dotadna.MatchInfo
	(*MatchListReq)(nil),    // 1: api.dotadna.MatchListReq
	(*MatchListResp)(nil),   // 2: api.dotadna.MatchListResp
	(*MatchDetialReq)(nil),  // 3: api.dotadna.MatchDetialReq
	(*PlayerInfo)(nil),      // 4: api.dotadna.PlayerInfo
	(*MatchDetialResp)(nil), // 5: api.dotadna.MatchDetialResp
}
var file_dotadna_dotadna_proto_depIdxs = []int32{
	0, // 0: api.dotadna.MatchListResp.matches:type_name -> api.dotadna.MatchInfo
	4, // 1: api.dotadna.MatchDetialResp.radiant_players:type_name -> api.dotadna.PlayerInfo
	4, // 2: api.dotadna.MatchDetialResp.dire_players:type_name -> api.dotadna.PlayerInfo
	1, // 3: api.dotadna.Dotadna.GetMatchList:input_type -> api.dotadna.MatchListReq
	3, // 4: api.dotadna.Dotadna.GetMatchDetial:input_type -> api.dotadna.MatchDetialReq
	2, // 5: api.dotadna.Dotadna.GetMatchList:output_type -> api.dotadna.MatchListResp
	5, // 6: api.dotadna.Dotadna.GetMatchDetial:output_type -> api.dotadna.MatchDetialResp
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_dotadna_dotadna_proto_init() }
func file_dotadna_dotadna_proto_init() {
	if File_dotadna_dotadna_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dotadna_dotadna_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dotadna_dotadna_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dotadna_dotadna_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dotadna_dotadna_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchDetialReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dotadna_dotadna_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dotadna_dotadna_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchDetialResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dotadna_dotadna_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dotadna_dotadna_proto_goTypes,
		DependencyIndexes: file_dotadna_dotadna_proto_depIdxs,
		MessageInfos:      file_dotadna_dotadna_proto_msgTypes,
	}.Build()
	File_dotadna_dotadna_proto = out.File
	file_dotadna_dotadna_proto_rawDesc = nil
	file_dotadna_dotadna_proto_goTypes = nil
	file_dotadna_dotadna_proto_depIdxs = nil
}
